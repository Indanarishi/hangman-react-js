{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc6ef94d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Hangman</h1>\r\n            <p>Find the hidden word - Enter a letter</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Figure = ({wrongLetters}) => {\r\n    const errors = wrongLetters.length;\r\n\r\n    return (\r\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n            {/* <!-- Rod --> */}\r\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n            {/* <!-- Head --> */}\r\n            {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n            {/* <!-- Body --> */}\r\n            {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n            {/* <!-- Arms --> */}\r\n            {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n            {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n            {/* <!-- Legs --> */}\r\n            {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n            {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n    return (\r\n        <div className=\"wrong-letters-container\">\r\n            <div>\r\n                {wrongLetters.length > 0 && <p>Wrong</p>}\r\n                {wrongLetters\r\n                    .map((letter, i) => <span key={i}>{letter}</span>)\r\n                    .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react'\r\n\r\nfunction Word({ selectedWord, correctLetters }) {\r\n    return (\r\n        <div className=\"word\">\r\n            {selectedWord.split('').map( (letter, i) => {\r\n                return(\r\n                    <span className=\"letter\" key={i}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n    return (\r\n        <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n            <p>You have already entered this letter</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","export function showNotification(setter) {\r\n    setter(true);\r\n    setTimeout(() => {\r\n        setter(false);\r\n    }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word){\r\n    let status = 'win';\r\n\r\n    // check for win\r\n    word.split('').forEach(letter => {\r\n        if(!correct.includes(letter)){\r\n            status = '';\r\n        }\r\n    });\r\n\r\n    // check for lose\r\n    if(wrong.length === 6) status = 'lose';\r\n\r\n    return status;\r\n}","import React, {useEffect} from 'react'\r\nimport {checkWin} from '../helpers/helpers';\r\n\r\nconst Popup = ( {correctLetters, wrongLetters, selectedWord, setPlayable, playAgain} ) => {\r\n    let finalMessage = '';\r\n    let finalMessageRevealWord = '';\r\n    let playable = true;\r\n\r\n    if(checkWin(correctLetters, wrongLetters, selectedWord) === 'win'){\r\n        finalMessage = 'Congratulations! You Won!';\r\n        playable = false;\r\n    }else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose'){\r\n        finalMessage = 'Unfortunately you lost.';\r\n        finalMessageRevealWord = `... the word was: ${selectedWord}`;\r\n        playable = false;\r\n    }\r\n\r\n    useEffect(() => setPlayable(playable));\r\n\r\n    return (\r\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n            <div className=\"popup\">\r\n            <h2>{finalMessage}</h2>\r\n            <h3>{finalMessageRevealWord}</h3>\r\n                <button onClick={playAgain}>Play Again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport {showNotification as show} from './helpers/helpers';\n\nimport './App.css';\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nlet playable = true;\n\nconst correctLetters = [];\nconst wrongLetters = [];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n    window.addEventListener('keydown', handleKeydown);\n    \n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  \n  function playAgain(){\n    setPlayable(true);\n\n    // Empty arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} \n      selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}